DATA SEGMENT 'DATA'
	PROMPT DB 'USE 4*4 KEYBOARD TO TEST NOW! PRESS ANY KEY ON KEYBOARD CONNECTED TO COMPUTER TO EXIT! ',13,10,'$'
	WRONG  DB 'ERROR OCCURS!',13,10,'$'
	
        SCAN_BYTE DB '0','4','8','C','1','5','9','D','2','6','A','E','3','7','B','F'
DATA ENDS

STACK SEGMENT STACK

STACK ENDS

CODE SEGMENT 'CODE'
	ASSUME DS:DATA, SS:STACK, ES:DATA, CS:CODE
MAIN PROC FAR
	MOV AX, DATA
	MOV DS, AX
	MOV ES, AX
	

	MOV DX, 0DE03H
        MOV AL, 10010001B
	OUT DX, AL
	
	MOV AH, 09H
	MOV DX, OFFSET PROMPT
	INT 21H
	
INPUT:
       	MOV CX, 0FFFFH
DELAY1:	
	PUSH CX
	MOV CX, 0AAAH
DELAY2:
	LOOP DELAY2
	POP CX
	LOOP DELAY1 
	
	CALL SCAN
	
	CMP BL, 0
	JE  EXIT
	
	
	MOV AL, 0
	MOV DX, 1
	MOV CX, 4
	
CHECK1:	
	TEST BL, DL
	JNZ  ADD1
	SHL  DL, 1
	LOOP CHECK1
	
	MOV DX, OFFSET WRONG
	MOV AH, 09H
	INT 21H
        JMP INPUT
ADD1:
	MOV DX, 4
	SUB DL, CL
	MOV AL, DL
	MOV CL, 2
	SHL AL, CL
	
	MOV CX, 4
	MOV DX, 16
	
CHECK2:
	TEST BL, DL
	JNZ  ADD2
	SHL  DX, 1
	LOOP CHECK2
	
	MOV DX, OFFSET WRONG
	MOV AH, 09H
	INT 21H
        JMP INPUT

ADD2:
	MOV DL, 4
	SUB DL, CL
	ADD AL, DL

	MOV BX, OFFSET SCAN_BYTE
	XLAT 
	
	MOV DL, AL
	MOV AH, 02H
        INT 21H
	
        JMP INPUT
	
	
EXIT:

	MOV AH, 4CH
	INT 21H
MAIN ENDP



SCAN PROC NEAR
	
	MOV DX, 0DE02H
        MOV AL, 11101110B
	OUT DX, AL
        
PRESS:
        PUSH AX
	
	MOV  AH, 0BH
	INT 21H
        CMP AL, 0FFH 
	JE  TERM

        MOV DX, 0DE02H
        IN  AL, DX
        MOV BL, AL   

        OR  AL, 11110000B
        NOT AL
	CMP AL, 0
        JA  RETURN
	POP AX
	ROL AL, 1
        OUT DX, AL
	JMP PRESS
        
	
RETURN:
       
	AND AL, 00001111B
	MOV BL, 0
	MOV BL, AL
	POP AX
        NOT AL
	AND AL, 11110000B
	OR  BL, AL
	RET
TERM:

        POP AX
	MOV BL, 0
	RET
	
SCAN ENDP

CODE ENDS

END MAIN
