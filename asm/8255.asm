DATA SEGMENT 'DATA'
	PROMPT1 DB 'Enter the command :',13,10,
			  '-c: Rotate clockwisely',13,10,
			  '-a: Rotate anticlockwisely',13,10,
			  '-e: Exit',13,10,'$'
	PROMPT2 DB 'Error command, please try again!',13,10,'$'
DATA ENDS

STACK SEGMENT STACK

STACK ENDS

CODE SEGMENT 'CODE'
	ASSUME DS:DATA, SS:STACK, ES:DATA, CS:CODE
MAIN PROC FAR
	MOV AX, DATA
	MOV DS, AX
	MOV ES, AX


	MOV DX, 0DE03H
	MOV AL, 10010000B
	OUT DX, AL
	

	MOV AH, 09H
	MOV DX, OFFSET PROMPT1
	INT 21H
	
	
	
	MOV DX, 0DE01H
	MOV AX, 3333H
	OUT DX, AL
	PUSH AX
	
OUTPUT:
	
COMMAND:
	MOV AH, 01H
	INT 21H
	

	CMP AL, 'e'
	JE EXIT
	
	CMP AL, 'E'
	JE EXIT
	CMP AL, 'c'
	JE  CLOCKWISE
	CMP AL, 'C'
	JE  CLOCKWISE
	CMP AL, 'a'
	JE  ANTICLOCKWISE
	CMP AL, 'A'
	JE  ANTICLOCKWISE
	MOV DX, OFFSET PROMPT2
	MOV AH, 09H
	INT 21H
	JMP COMMAND
	
CLOCKWISE:
	MOV AH, 2CH
	INT 21H
	MOV BL,DL
CLOCK1:
	MOV AH, 2CH
	INT 21H
	SUB DL, BL
	CMP DL, 10
	JBE CLOCK1
	
	POP AX
	ROL AX, 1
	MOV DX, 0DE01H
	OUT DX, AL
	PUSH AX
	MOV AH, 0BH
	INT 21H
	CMP AL, 0FFH
	JE OUTPUT
	JMP CLOCKWISE

ANTICLOCKWISE:
	MOV AH, 2CH
	INT 21H
	MOV BL,DL
CLOCK2:
	MOV AH, 2CH
	INT 21H
	SUB DL, BL
	CMP DL, 10
	JBE CLOCK2
	
	POP AX
	ROR AX, 1
	MOV DX, 0DE01H
	OUT DX, AL
	PUSH AX
	MOV AH, 0BH
	INT 21H
	CMP AL, 0FFH
	JE OUTPUT
	JMP ANTICLOCKWISE
	
	
EXIT:

	MOV AH, 4CH
	INT 21H
MAIN ENDP


CODE ENDS

END MAIN